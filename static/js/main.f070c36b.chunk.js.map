{"version":3,"sources":["component/Demo.js","App.js","serviceWorker.js","index.js"],"names":["getServerSideToken","clientSideToken","Promise","resolve","reject","microsoftTeams","context","req","res","tid","body","token","scopes","url","params","client_id","client_secret","grant_type","assertion","requested_token_use","scope","join","fetch","method","querystring","stringify","headers","Accept","then","result","status","json","error","access_token","err","console","log","getsevertoken","JSON","mode","cache","response","ok","responseJson","App","props","state","client_token","server_token","profile","theme","this","setState","getAuthToken","successCallback","failureCallback","prevState","serverSideToken","statusText","data","catch","className","displayName","mail","id","React","Component","BlogPost","slug","useParams","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","href","tabindex","aria-disabled","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f070c36b.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport querystring from 'querystring';\r\nimport './../App.css';\r\n\r\nfunction getsevertoken(req, res) {\r\n  var tid = req.body.tid;\r\n  var token = req.body.token;\r\n  var scopes = [\"https://graph.microsoft.com/User.Read\"];\r\n\r\n  var oboPromise = new Promise((resolve, reject) => {\r\n      const url = \"https://login.microsoftonline.com/\" + tid + \"/oauth2/v2.0/token\";\r\n      const params = {\r\n          client_id: '630f584b-b191-409e-a327-e0d185632359',\r\n          client_secret: '91M_kPSR6h4-jhGl7disIg_bwhNcBXvAS~',\r\n          grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n          assertion: token,\r\n          requested_token_use: \"on_behalf_of\",\r\n          scope: scopes.join(\" \")\r\n      };\r\n  \r\n      fetch(url, {\r\n        method: \"POST\",\r\n        body: querystring.stringify(params),\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n        }\r\n      }).then(result => {\r\n        if (result.status !== 200) {\r\n          result.json().then(json => {\r\n            // TODO: Check explicitly for invalid_grant or interaction_required\r\n            reject({\"error\":json.error});\r\n          });\r\n        } else {\r\n          result.json().then(json => {\r\n            resolve(json.access_token);\r\n          });\r\n        }\r\n      });\r\n  });\r\n\r\n  oboPromise.then(function(result) {\r\n      res.json(result);\r\n  }, function(err) {\r\n      console.log(err); // Error: \"It broke\"\r\n      res.json(err);\r\n  });\r\n}\r\n\r\n\r\nfunction getClientSideToken() {\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    console.log(\"1. Get auth token from Microsoft Teams\");\r\n\r\n    microsoftTeams.authentication.getAuthToken({\r\n      successCallback: (result) => {\r\n        //display(result)\r\n        //console.log(result);\r\n        resolve(result);\r\n      },\r\n      failureCallback: function (error) {\r\n        reject(\"Error getting token: \" + error);\r\n        console.log('Error getting token');\r\n      }\r\n    });\r\n\r\n  });\r\n\r\n}\r\n\r\n// 2. Exchange that token for a token with the required permissions\r\n//    using the web service (see /auth/token handler in app.js)\r\nfunction getServerSideToken(clientSideToken) {\r\n\r\n  //display(\"2. Exchange for server-side token\");\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    microsoftTeams.getContext((context) => {\r\n\r\n      getsevertoken({\r\n        method: 'post',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            'tid': context.tid,\r\n            'token': clientSideToken \r\n        }),\r\n        mode: 'cors',\r\n        cache: 'default'\r\n      })\r\n        .then((response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            reject(response.error);\r\n          }\r\n        })\r\n        .then((responseJson) => {\r\n          if (responseJson.error) {\r\n            reject(responseJson.error);\r\n          } else {\r\n            const serverSideToken = responseJson;\r\n            //display(serverSideToken);\r\n            resolve(serverSideToken);\r\n          }\r\n        });\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction useServerSideToken(data) {\r\n\r\n  //display(\"3. Call https://graph.microsoft.com/v1.0/me/ with the server side token\");\r\n\r\n  return fetch(\"https://graph.microsoft.com/v1.0/me/\",\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        \"accept\": \"application/json\",\r\n        \"authorization\": \"bearer \" + data\r\n      },\r\n      mode: 'cors',\r\n      cache: 'default'\r\n    })\r\n    .then((response) => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        throw (`Error ${response.status}: ${response.statusText}`);\r\n      }\r\n    })\r\n    .then((profile) => {\r\n\r\n      return profile\r\n    });\r\n\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client_token: 'client token',\r\n      server_token: 'server token',\r\n      profile: {},\r\n      theme: 'theme'\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n   \r\n    microsoftTeams.initialize();\r\n\r\n    microsoftTeams.getContext(function (context) {\r\n\r\n      if (context && context.theme) {\r\n\r\n        console.log(context);\r\n        this.setState({\r\n          theme: context.theme\r\n        })\r\n      } else {\r\n        console.log('no theme');\r\n      }\r\n    });\r\n\r\n    getClientSideToken()\r\n      .then((clientSideToken) => {\r\n\r\n        this.setState((prevState, props) => {\r\n          return {client_token: clientSideToken}\r\n        })\r\n    \r\n        return getServerSideToken(clientSideToken);\r\n      })\r\n      .then((serverSideToken) => {\r\n\r\n        console.log(serverSideToken);\r\n\r\n        this.setState((prevState, props) => {\r\n          return {server_token: serverSideToken}\r\n        })\r\n        return useServerSideToken(serverSideToken);\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n   \r\n        this.setState((prevState, props) => {\r\n          return {profile: data}\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div> \r\n        <div className=\"container\">\r\n        <h5 className=\"text-left\">Demo 1 tokens</h5>\r\n\r\n        </div>\r\n        \r\n\r\n        <div className=\"container\">\r\n\r\n          <div className=\"row\">          \r\n            <div className=\"col-sm-3\">\r\n              Theme\r\n          </div>\r\n            <div className=\"col-sm-9\">\r\n            {this.state.theme}\r\n          </div>         \r\n          </div>\r\n        \r\n          <div className=\"row\">          \r\n            <div className=\"col-sm-3\">\r\n            client token\r\n          </div>\r\n            <div className=\"col-sm-9\">\r\n            {this.state.client_token}\r\n          </div>         \r\n          </div>\r\n     \r\n          <div className=\"row\">          \r\n            <div className=\"col-sm-3\">\r\n            server token\r\n          </div>\r\n            <div className=\"col-sm-9\">\r\n            {this.state.server_token}\r\n          </div>         \r\n          </div>\r\n     \r\n     <br/>\r\n          <div className=\"container\">\r\n          <h5 className=\"text-left\">Profile</h5>\r\n          </div>\r\n     \r\n          <div className=\"row\">          \r\n            <div className=\"col-sm-3\">\r\n            <p>Name:</p>\r\n            <p>Email:</p>\r\n            <p>id:</p>\r\n          </div>\r\n            <div className=\"col-sm-9\">\r\n            <p>{this.state.profile.displayName}</p>\r\n            <p>{this.state.profile.mail}</p>\r\n            <p>{this.state.profile.id}</p>\r\n          </div>         \r\n          </div>\r\n     \r\n        \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Home from './component/Demo';\r\nimport './App.css';\r\n\r\n\r\nfunction BlogPost() {\r\n  let { slug } = useParams();\r\n  return <div>Now showing post {slug}</div>;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n\r\n      <Router>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n          <div className=\"container-fluid\">\r\n            \r\n            <Link className=\"navbar-brand\" to=\"/\">Hsenid Biz</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/React-h-biz\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/React-h-biz/ssoDemo\">ssoDemo</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/config/:slug\">Config</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/React-h-biz\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/React-h-biz/ssoDemo\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"config/:slug\">\r\n            <BlogPost />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}